name: Release CommitFeed

on:
  push:
    tags:
      - 'v*'  # e.g. v1.0.0

permissions:
  contents: write

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build binaries
        run: |
          mkdir -p dist
          for name in commitfeed cf; do
            output_name="${name}-${{ matrix.goos }}-${{ matrix.goarch }}"
            if [ "${{ matrix.goos }}" = "windows" ]; then
              output_name="${output_name}.exe"
            fi
            echo "🏗️ Building $output_name"
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="-s -w" -o "dist/$output_name" ./main.go
          done

      - name: Compress binaries
        run: |
          cd dist
          for file in *; do
            case "$file" in
              *.exe)
                zip "${file%.exe}.zip" "$file"
                ;;
              *)
                tar -czf "${file}.tar.gz" "$file"
                ;;
            esac
          done

      - name: Generate checksums
        run: |
          cd dist
          sha256sum * > checksums.txt
          cat checksums.txt

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: commitfeed-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Merge all build outputs
        run: |
          mkdir -p merged
          find dist -type f -exec cp {} merged/ \;
          ls -l merged

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "CommitFeed ${{ github.ref_name }}"
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            merged/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
